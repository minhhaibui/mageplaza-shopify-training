{% schema %}
{
  "name": "Avada_instagram",
  "target": "section",
  "javascript": "avada-instagram.js",
  "settings": []
}
{% endschema %}
{% assign feed_data = shop.metafields.global.shop_test %}
{% assign feed_columns = feed_data.columns%}
{% assign feed_postSpacing = feed_data.postSpacing%}
{% assign feed_countMedia = feed_data.mediaCount%}


<div id="ig_container">

{% comment %} 
  <h2>data: {{ shop.metafields.global.shop_test}}</h2>
  <h2>data: {{ feed_columns}}</h2> {% endcomment %}
     <div id="grid" style="display: grid; grid-template-columns: repeat({{ feed_columns }}, 1fr); gap: {{ feed_postSpacing }}px;">
    {% for i in (1..feed_countMedia) %}
      <div class="post-item_ig" style="border: 1px solid #ccc; aspect-ratio: 1 / 1; width: 100%; height: 100%">
      </div>
    {% endfor %}
  </div>   
</div>

<script defer>
  document.addEventListener('DOMContentLoaded', function() {
    function updateContainerHeight() {
      const grid = document.getElementById('grid');
      const igContainer = document.getElementById('ig_container');
      const feedColumns = {{ feed_columns }};
      const feedCountMedia = {{ feed_countMedia }};
      const feedPostSpacing = {{ feed_postSpacing }};
      const feedRows = Math.ceil(feedCountMedia / feedColumns); // 3.2 => 4
      const totalGap = (feedRows - 1) * feedPostSpacing;
      let itemHeight = grid ? grid.clientHeight : igContainer.clientHeight;
      const totalHeight = itemHeight + totalGap;
      const parentRoot = igContainer.parentElement.parentElement.parentElement;
      parentRoot.style.height = `${totalHeight}px`;
      console.log("resize", totalHeight);
    }

    updateContainerHeight();

    let resizeTimer;
    window.addEventListener('resize', function() {
      clearTimeout(resizeTimer);
      resizeTimer = setTimeout(updateContainerHeight, 1000); 
    });
  });
</script>
